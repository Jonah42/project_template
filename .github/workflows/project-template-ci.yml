name: project_template CI

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.os }}-${{ matrix.build_type }}-${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        build_type: [Debug, Release]
        toolchain: [gcc_libstdcxx, clang_libstdcxx, clang_libcxx]
        clang_tidy: [On]
        clang_tidy_path: [/usr/bin/clang-tidy]
    steps:
      - name: Install tools
        id: install_tools
        run: |
          sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          sudo apt-add-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal main'
          sudo apt-get update
          sudo apt-get remove -y .*clang.* .*llvm.*
          sudo apt-get autoremove -y
          sudo apt-get install -y \
            clang-format-12       \
            clang-tidy-12         \
            clang-tools-12        \
            clang-12              \
            libc++-12-dev         \
            libc++1-12            \
            libc++abi-12-dev      \
            libc++abi1-12         \
            libclang-12-dev       \
            libclang1-12          \
            libllvm-12-ocaml-dev  \
            libomp-12-dev         \
            libomp5-12            \
            lld-12                \
            llvm-12-dev           \
            llvm-12-runtime       \
            llvm-12               \
            python3-clang-12      \
            cmake                 \
            g++-10                \
            ninja-build
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 100
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-12 100
          sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-12 100
          sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-12 100
          sudo update-alternatives --install /usr/bin/git-clang-format git-clang-format /usr/bin/git-clang-format-12 100
          sudo update-alternatives --install /usr/bin/llvm-ar llvm-ar /usr/bin/llvm-ar-12 100
          sudo update-alternatives --install /usr/bin/llvm-as llvm-as /usr/bin/llvm-as-12 100
          sudo update-alternatives --install /usr/bin/llvm-rc llvm-rc /usr/bin/llvm-rc-12 100
          sudo update-alternatives --install /usr/bin/llvm-ranlib llvm-ranlib /usr/bin/llvm-ranlib-12 100

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Formatting
        id: git_clang_format
        run:
          git-clang-format-12
            --style=file
            --extensions c,cc,cpp,cxx,h,hh,hpp,hxx
            --diff origin/main HEAD

      - name: Install external libraries
        id: install_vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git
          cp config/vcpkg/${{ matrix.toolchain }}.cmake vcpkg/triplets/community/.
          cd vcpkg
          ./bootstrap-vcpkg.sh -disableMetrics -useSystemBinaries
          ./vcpkg install --triplet=${{ matrix.toolchain }} catch2
          ./vcpkg install --triplet=${{ matrix.toolchain }} --head benchmark

      - name: Configure
        id: configure
        run:
          cmake . -GNinja
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
            -DCMAKE_TOOLCHAIN_FILE=`pwd`/vcpkg/scripts/buildsystems/vcpkg.cmake
            -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=`pwd`/config/cmake/toolchains/${{ matrix.toolchain }}.cmake
            -DVCPKG_TARGET_TRIPLET=${{ matrix.toolchain }}
            -DTODO_RENAME_ME_ENABLE_CLANG_TIDY=${{ matrix.clang_tidy }}
            -DTODO_RENAME_ME_CLANG_TIDY_PATH=${{ matrix.clang_tidy_path }}

      - name: Build
        id: build
        run: ninja

      - name: Test
        id: test
        run: ctest -j$(nproc) --output-on-failure
